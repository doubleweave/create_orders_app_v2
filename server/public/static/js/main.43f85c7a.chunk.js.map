{"version":3,"sources":["components/createOrders/createOrdersReducer.js","components/context/createOrdersContext.js","components/createOrders/subForms/TotalAmount.js","components/createOrders/subForms/Consumer.js","components/createOrders/subForms/Billing.js","components/createOrders/subForms/Shipping.js","components/createOrders/subForms/Item.js","components/createOrders/subForms/Items.js","api/myAxios.js","api/index.js","components/createOrders/subForms/Merchant.js","components/createOrders/Form.js","components/createOrders/index.js","App.js","index.js"],"names":["createOrdersReducer","state","action","type","payload","data","console","log","totalAmount","amount","currency","consumer","givenNames","phoneNumber","surname","email","billing","countryCode","name","postcode","suburb","line1","shipping","items","gtin","quantity","price","category","sku","brand","merchant","redirectCancelUrl","redirectConfirmUrl","merchantReference","shippingAmount","orderExpiryMilliseconds","createOrdersContext","createContext","pageStyle","width","xs","sm","xl","height","margin","display","flexDirection","justifyContent","alignItems","flexGrow","flexShrink","formTopLabel","textAlign","lineHeight","amountDefault","TotalAmount","val","useContext","history","useHistory","useState","errMsg","setErrMsg","Box","className","sx","FormLabel","component","Grid","container","justify","direction","color","marginLeft","Stack","spacing","Autocomplete","freeSolo","id","disableClearable","value","onChange","e","values","options","map","option","renderInput","params","TextField","required","label","InputProps","target","Divider","Button","variant","onClick","fullWidth","disabled","replace","Consumer","placeholder","Billing","Shipping","postCode","Item","Paper","maxHeight","overflowY","mt","Card","CardContent","Typography","fontSize","gutterBottom","mb","Items","a","url","config","dataStr","Object","keys","forEach","key","substring","lastIndexOf","axios","get","post","reqCreateOrders","orderForm","myAxios","creatOrdersFn","formData","response","result","status","checkoutUrl","MerchantInfo","waitRes","setWaitRes","handleSubmit","res","window","location","href","border","BorderLinearProgress","styled","LinearProgress","theme","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","Form","useLocation","FormTitle","progressWidth","setProgressWidth","path","pathname","useEffect","page","findIndex","item","CircularProgress","left","ml","Merchant","userReducer","Provider","StoreProvider","children","useReducer","dispatch","store","React","useMemo","index","createTheme","App","StyledEngineProvider","injectFirst","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43f85c7a.chunk.js","sourcesContent":["const createOrdersReducer = (state, action) => {\r\n  const { type, payload } = action\r\n  const data = { ...state }\r\n  switch (type) {\r\n    //totalAmount\r\n    case 'CREATE_ORDERS_UPDATE_TOTALAMOUNT_AMOUNT':\r\n      console.log('payload: ', payload)\r\n      data.totalAmount.amount = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_TOTALAMOUNT_CURRENCY':\r\n      console.log('payload: ', payload)\r\n      data.totalAmount.currency = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n\r\n    //consumer\r\n    case 'CREATE_ORDERS_UPDATE_CONSUMER_GIVENNAMES':\r\n      console.log('payload: ', payload)\r\n      data.consumer.givenNames = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_CONSUMER_PHONENUMBER':\r\n      console.log('payload: ', payload)\r\n      data.consumer.phoneNumber = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_CONSUMER_SURNAME':\r\n      console.log('payload: ', payload)\r\n      data.consumer.surname = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_CONSUMER_EMAIL':\r\n      console.log('payload: ', payload)\r\n      data.consumer.email = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n\r\n    //billing\r\n    case 'CREATE_ORDERS_UPDATE_BILLING_PHONENUMBER':\r\n      console.log('phoneNumber: ', payload)\r\n      data.billing.phoneNumber = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_BILLING_COUNTRYCODE':\r\n      console.log('payload: ', payload)\r\n      data.billing.countryCode = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_BILLING_NAME':\r\n      console.log('payload: ', payload)\r\n      data.billing.name = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_BILLING_POSTCODE':\r\n      console.log('payload: ', payload)\r\n      data.billing.postcode = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_BILLING_SUBURB':\r\n      console.log('payload: ', payload)\r\n      data.billing.suburb = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_BILLING_LINE1':\r\n      console.log('payload: ', payload)\r\n      data.billing.line1 = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n\r\n    //shipping\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPING_PHONENUMBER':\r\n      console.log('phoneNumber: ', payload)\r\n      data.shipping.phoneNumber = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPING_COUNTRYCODE':\r\n      console.log('payload: ', payload)\r\n      data.shipping.countryCode = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPING_NAME':\r\n      console.log('payload: ', payload)\r\n      data.shipping.name = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPING_POSTCODE':\r\n      console.log('payload: ', payload)\r\n      data.shipping.postcode = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPING_SUBURB':\r\n      console.log('payload: ', payload)\r\n      data.shipping.suburb = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPING_LINE1':\r\n      console.log('payload: ', payload)\r\n      data.shipping.line1 = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n\r\n    //items\r\n\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_GTIN':\r\n      console.log('phoneNumber: ', payload)\r\n      data.items[0].gtin = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_QUANTITY':\r\n      console.log('payload: ', payload)\r\n      data.items[0].quantity = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_PRICE_AMOUNT':\r\n      console.log('payload: ', payload)\r\n      data.items[0].price.amount = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_PRICE_CURRENCY':\r\n      console.log('payload: ', payload)\r\n      data.items[0].price.currency = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_NAME':\r\n      console.log('payload: ', payload)\r\n      data.items[0].name = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_CATEGORY':\r\n      console.log('payload: ', payload)\r\n      data.items[0].category = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_SKU':\r\n      console.log('phoneNumber: ', payload)\r\n      data.items[0].sku = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ITEMS_BRAND':\r\n      console.log('payload: ', payload)\r\n      data.items[0].brand = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n\r\n    //merchant\r\n    case 'CREATE_ORDERS_UPDATE_MERCHANT_REDIRECTCANCELURL':\r\n      console.log('phoneNumber: ', payload)\r\n      data.merchant.redirectCancelUrl = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_MERCHANT_REDIRECTCONFIRMURL':\r\n      console.log('payload: ', payload)\r\n      data.merchant.redirectConfirmUrl = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_MERCHANTREFERENCE':\r\n      console.log('payload: ', payload)\r\n      data.merchantReference = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPINGAMOUNT_AMOUNT':\r\n      console.log('payload: ', payload)\r\n      data.shippingAmount.amount = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_SHIPPINGAMOUNT_CURRENCY':\r\n      console.log('payload: ', payload)\r\n      data.shippingAmount.currency = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n    case 'CREATE_ORDERS_UPDATE_ORDEREXPIRYMILLISECONDS':\r\n      console.log('payload: ', payload)\r\n      data.orderExpiryMilliseconds = payload\r\n      console.log('data in reducer: ', data)\r\n      return {\r\n        ...data,\r\n      }\r\n\r\n    // for testing\r\n    case 'SET_DEFAULT_VALUE_FOR_CREATE_ORDERS':\r\n      return {\r\n        totalAmount: {\r\n          amount: '190.00',\r\n          currency: 'EUR',\r\n        },\r\n        consumer: {\r\n          givenNames: 'Joe',\r\n          phoneNumber: '0400000001',\r\n          surname: 'Li',\r\n          email: 'test@scalapay.com',\r\n        },\r\n        billing: {\r\n          phoneNumber: '0400000000',\r\n          countryCode: 'IT',\r\n          name: 'Joe Consumer',\r\n          postcode: '50056',\r\n          suburb: 'Montelupo Fiorentino',\r\n          line1: 'Via della Rosa, 58',\r\n        },\r\n        shipping: {\r\n          phoneNumber: '0400000000',\r\n          countryCode: 'IT',\r\n          name: 'Joe Consumer',\r\n          postcode: '50056',\r\n          suburb: 'Montelupo Fiorentino',\r\n          line1: 'Via della Rosa, 58',\r\n        },\r\n        items: [\r\n          {\r\n            price: {\r\n              amount: '10.00',\r\n              currency: 'EUR',\r\n            },\r\n            quantity: 1,\r\n            gtin: '123458791330',\r\n            name: 'T-Shirt',\r\n            category: 'clothes',\r\n            sku: '12341234',\r\n            brand: 'TopChoice',\r\n          },\r\n        ],\r\n        merchant: {\r\n          redirectCancelUrl: 'https://portal.staging.scalapay.com/failure-url',\r\n          redirectConfirmUrl: 'https://portal.staging.scalapay.com/success-url',\r\n        },\r\n        shippingAmount: {\r\n          amount: '10.00',\r\n          currency: 'EUR',\r\n        },\r\n        orderExpiryMilliseconds: 600000,\r\n        merchantReference: 'merchantOrder-1234',\r\n      }\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      }\r\n  }\r\n}\r\n\r\nexport default createOrdersReducer\r\n","import { createContext, Context } from 'react'\r\n\r\nconst createOrdersContext = createContext(null)\r\n\r\nexport default createOrdersContext\r\n","import React, { useState, useContext } from 'react'\r\nimport createOrdersContext from '../../context/createOrdersContext'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n  Divider,\r\n  Button,\r\n  Box,\r\n  Stack,\r\n  Autocomplete,\r\n} from '@mui/material'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst gridItemText = {\r\n  mt: 1,\r\n  mb: 1,\r\n}\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  height: '95vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nconst amountDefault = [{ amount: '190.00' }]\r\n\r\nfunction TotalAmount() {\r\n  const val = useContext(createOrdersContext)\r\n  console.log('val[0]: ', val)\r\n  const history = useHistory()\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const toConsumerPage = () => {\r\n    if (val[0].totalAmount.amount === '') {\r\n      setErrMsg('Amount field is required!!')\r\n    } else if (val[0].totalAmount.currency === '') {\r\n      setErrMsg('Currency field is required!!')\r\n    } else {\r\n      history.replace('/consumer')\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Box className=\"form\" sx={pageStyle}>\r\n        <div>\r\n          <form>\r\n            <FormLabel sx={formTopLabel} component=\"legend\">\r\n              TotalAmount\r\n            </FormLabel>\r\n            <div className=\"body-container\">\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                {errMsg ? (\r\n                  <Box\r\n                    sx={{\r\n                      color: 'red',\r\n                      marginLeft: '1em',\r\n                    }}\r\n                  >\r\n                    {errMsg}\r\n                  </Box>\r\n                ) : null}\r\n                <Stack spacing={2} sx={{ width: 300 }}>\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"amount\"\r\n                    disableClearable\r\n                    className=\"totalAmount_amount\"\r\n                    data-testid=\"autocomplete\"\r\n                    value={val[0].totalAmount.amount}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_TOTALAMOUNT_AMOUNT',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={amountDefault.map((option) => option.amount)}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        className=\"totalAmount_amount_input\"\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"Amount\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_TOTALAMOUNT_AMOUNT',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"currency\"\r\n                    disableClearable\r\n                    value={val[0].totalAmount.currency}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_TOTALAMOUNT_CURRENCY',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['EUR']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"currency\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_TOTALAMOUNT_CURRENCY',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              val[1]({\r\n                type: 'SET_DEFAULT_VALUE_FOR_CREATE_ORDERS',\r\n                payload: '',\r\n              })\r\n            }}\r\n            fullWidth\r\n          >\r\n            Default value for testing\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            disabled\r\n            fullWidth\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={toConsumerPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TotalAmount\r\n","import React, { useState, useContext } from 'react'\r\nimport createOrdersContext from '../../context/createOrdersContext'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n  Divider,\r\n  Button,\r\n  Box,\r\n  Stack,\r\n  Autocomplete,\r\n} from '@mui/material'\r\n\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\n\r\nconst gridItemText = {\r\n  mt: 1,\r\n  mb: 1,\r\n}\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  height: '95vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nfunction Consumer() {\r\n  const val = useContext(createOrdersContext)\r\n  console.log('val[0]: ', val[0])\r\n  const history = useHistory()\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const toBillingPage = () => {\r\n    if (val[0].consumer.givenNames === '') {\r\n      setErrMsg('GivenNames is required!!')\r\n    } else if (val[0].consumer.surname === '') {\r\n      setErrMsg('Surname is required!!')\r\n    } else {\r\n      history.replace('/billing')\r\n    }\r\n  }\r\n  const toTotalAmountPage = () => {\r\n    history.replace('/totalAmount')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"form\" sx={pageStyle}>\r\n        <div>\r\n          <form>\r\n            <FormLabel sx={formTopLabel} component=\"legend\">\r\n              Consumer\r\n            </FormLabel>\r\n            <div className=\"body-container\">\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                {errMsg ? (\r\n                  <Box\r\n                    sx={{\r\n                      color: 'red',\r\n                      marginLeft: '1em',\r\n                    }}\r\n                  >\r\n                    {errMsg}\r\n                  </Box>\r\n                ) : null}\r\n                <Stack spacing={2} sx={{ width: 300 }}>\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"phoneNumber\"\r\n                    disableClearable\r\n                    value={val[0].consumer.phoneNumber}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_CONSUMER_PHONENUMBER',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['0400000001']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"phoneNumber\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_CONSUMER_PHONENUMBER',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"givenNames\"\r\n                    disableClearable\r\n                    value={val[0].consumer.givenNames}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_CONSUMER_GIVENNAMES',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Joe']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"givenNames\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_CONSUMER_GIVENNAMES',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <TextField\r\n                    required={true}\r\n                    id=\"surname\"\r\n                    label=\"surname\"\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    value={val[0].consumer.surname}\r\n                    onChange={(e) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_CONSUMER_SURNAME',\r\n                        payload: e.target.value,\r\n                      })\r\n                    }}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"email\"\r\n                    disableClearable\r\n                    value={val[0].consumer.email}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_CONSUMER_EMAIL',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['test@scalapay.com']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"email\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_CONSUMER_EMAIL',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            onClick={toTotalAmountPage}\r\n            fullWidth\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={toBillingPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Consumer\r\n","import React, { useState, useContext } from 'react'\r\nimport createOrdersContext from '../../context/createOrdersContext'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n  Divider,\r\n  Button,\r\n  Box,\r\n  Stack,\r\n  Autocomplete,\r\n} from '@mui/material'\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\n\r\nconst gridItemText = {\r\n  mt: 1,\r\n  mb: 1,\r\n}\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  height: '95vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nfunction Billing() {\r\n  const val = useContext(createOrdersContext)\r\n  console.log('val[0]: ', val[0])\r\n\r\n  const history = useHistory()\r\n  const toShippingPage = () => {\r\n    history.replace('/shipping')\r\n  }\r\n  const toConsumerPage = () => {\r\n    history.replace('/consumer')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"form\" sx={pageStyle}>\r\n        <div>\r\n          <form>\r\n            <FormLabel sx={formTopLabel} component=\"legend\">\r\n              Billing\r\n            </FormLabel>\r\n            <div className=\"body-container\">\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                <Stack spacing={2} sx={{ width: 300 }}>\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"phoneNumber\"\r\n                    disableClearable\r\n                    value={val[0].billing.phoneNumber}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_BILLING_PHONENUMBER',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['0400000000']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"phoneNumber\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_BILLING_PHONENUMBER',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"countryCode\"\r\n                    disableClearable\r\n                    value={val[0].billing.countryCode}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_BILLING_COUNTRYCODE',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['IT']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"countryCode\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_BILLING_COUNTRYCODE',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"name\"\r\n                    disableClearable\r\n                    value={val[0].billing.name}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_BILLING_NAME',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Joe Consumer']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"name\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_BILLING_NAME',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"postcode\"\r\n                    disableClearable\r\n                    value={val[0].billing.postcode}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_BILLING_POSTCODE',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['50056']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"postcode\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_BILLING_POSTCODE',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"suburb\"\r\n                    disableClearable\r\n                    value={val[0].billing.suburb}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_BILLING_SUBURB',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Montelupo Fiorentino']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"suburb\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_BILLING_SUBURB',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"line1\"\r\n                    disableClearable\r\n                    value={val[0].billing.line1}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_BILLING_LINE1',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Via della Rosa, 58']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"line1\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_BILLING_LINE1',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            onClick={toConsumerPage}\r\n            fullWidth\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={toShippingPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Billing\r\n","import React, { useState, useContext } from 'react'\r\nimport createOrdersContext from '../../context/createOrdersContext'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n  Divider,\r\n  Button,\r\n  Box,\r\n  Stack,\r\n  Autocomplete,\r\n} from '@mui/material'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst gridItemText = {\r\n  mt: 1,\r\n  mb: 1,\r\n}\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  height: '95vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nfunction Shipping() {\r\n  const val = useContext(createOrdersContext)\r\n  console.log('val[0]: ', val[0])\r\n\r\n  const history = useHistory()\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const toItemsPage = () => {\r\n    if (val[0].shipping.countryCode === '') {\r\n      setErrMsg('CountryCode is required!!')\r\n    } else if (val[0].shipping.name === '') {\r\n      setErrMsg('Name field is required!!')\r\n    } else if (val[0].shipping.postCode === '') {\r\n      setErrMsg('PostCode field is required!!')\r\n    } else if (val[0].shipping.line1 === '') {\r\n      setErrMsg('Line1 field is required!!')\r\n    } else {\r\n      history.replace('/items')\r\n    }\r\n  }\r\n  const toBillingPage = () => {\r\n    history.replace('/billing')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"form\" sx={pageStyle}>\r\n        <div>\r\n          <form>\r\n            <FormLabel sx={formTopLabel} component=\"legend\">\r\n              Shipping\r\n            </FormLabel>\r\n            <div className=\"body-container\">\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                {errMsg ? (\r\n                  <Box\r\n                    sx={{\r\n                      color: 'red',\r\n                      marginLeft: '1em',\r\n                    }}\r\n                  >\r\n                    {errMsg}\r\n                  </Box>\r\n                ) : null}\r\n\r\n                <Stack spacing={2} sx={{ width: 300 }}>\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"phoneNumber\"\r\n                    disableClearable\r\n                    value={val[0].shipping.phoneNumber}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_SHIPPING_PHONENUMBER',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['0400000000']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"phoneNumber\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPING_PHONENUMBER',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"countryCode\"\r\n                    disableClearable\r\n                    value={val[0].shipping.countryCode}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_SHIPPING_COUNTRYCODE',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['IT']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"countryCode\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPING_COUNTRYCODES',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"name\"\r\n                    disableClearable\r\n                    value={val[0].shipping.name}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_SHIPPING_NAME',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Joe Consumer']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"name\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPING_NAME',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"postcode\"\r\n                    disableClearable\r\n                    value={val[0].shipping.postcode}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_SHIPPING_POSTCODE',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['50056']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"postcode\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPING_POSTCODE',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"suburb\"\r\n                    disableClearable\r\n                    value={val[0].shipping.suburb}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_SHIPPING_SUBURB',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Montelupo Fiorentino']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"suburb\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPING_SUBURB',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"line1\"\r\n                    disableClearable\r\n                    value={val[0].shipping.line1}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_SHIPPING_LINE1',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['Via della Rosa, 58']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"line1\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPING_LINE1',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            onClick={toBillingPage}\r\n            fullWidth\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={toItemsPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Shipping\r\n","import React, { useState, useContext } from 'react'\r\nimport createOrdersContext from '../../context/createOrdersContext'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  Divider,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Stack,\r\n  Autocomplete,\r\n} from '@mui/material'\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\n\r\nconst gridItemText = {\r\n  mt: 1,\r\n  mb: 1,\r\n}\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  height: '95vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nfunction Item() {\r\n  const val = useContext(createOrdersContext)\r\n  console.log('val[0]: ', val[0])\r\n  const history = useHistory()\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const toMerchantPage = () => {\r\n    if (val[0].items[0].quantity === '') {\r\n      setErrMsg('Quantity is required!!')\r\n    } else if (val[0].items[0].price.amount === '') {\r\n      setErrMsg('Price amount field is required!!')\r\n    } else if (val[0].items[0].price.currency === '') {\r\n      setErrMsg('Price currency field  is required!!')\r\n    } else if (val[0].items[0].name === '') {\r\n      setErrMsg('Name field is required!!')\r\n    } else if (val[0].items[0].category === '') {\r\n      setErrMsg('Category field is required!!')\r\n    } else if (val[0].items[0].sku === '') {\r\n      setErrMsg('Sku field is required!!')\r\n    } else {\r\n      history.replace('/merchant')\r\n    }\r\n  }\r\n  const toShippingPage = () => {\r\n    history.replace('/shipping')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"form\" sx={pageStyle}>\r\n        <div>\r\n          <form>\r\n            <FormLabel sx={formTopLabel} component=\"legend\">\r\n              Object\r\n            </FormLabel>\r\n            <div className=\"body-container\">\r\n              <Paper\r\n                sx={{\r\n                  maxHeight: '500px',\r\n                  overflowY: 'scroll',\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  direction=\"column\"\r\n                >\r\n                  {errMsg ? (\r\n                    <Box\r\n                      sx={{\r\n                        color: 'red',\r\n                        marginLeft: '1em',\r\n                      }}\r\n                    >\r\n                      {errMsg}\r\n                    </Box>\r\n                  ) : null}\r\n\r\n                  <Stack spacing={2} sx={{ width: 300 }}>\r\n                    <Autocomplete\r\n                      sx={{ mt: 1 }}\r\n                      freeSolo\r\n                      id=\"gtin\"\r\n                      disableClearable\r\n                      value={val[0].items[0].gtin}\r\n                      onChange={(e, values) => {\r\n                        val[1]({\r\n                          type: 'CREATE_ORDERS_UPDATE_ITEMS_GTIN',\r\n                          payload: values,\r\n                        })\r\n                      }}\r\n                      options={['123458791330']}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"gtin\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: 'text',\r\n                          }}\r\n                          onChange={(e) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_GTIN',\r\n                              payload: e.target.value,\r\n                            })\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Divider />\r\n                    <TextField\r\n                      required={true}\r\n                      id=\"quantity\"\r\n                      label=\"quantity\"\r\n                      type=\"text\"\r\n                      placeholder=\"1\"\r\n                      value={val[0].items[0].quantity}\r\n                      onChange={(e) => {\r\n                        val[1]({\r\n                          type: 'CREATE_ORDERS_UPDATE_ITEMS_QUANTITY',\r\n                          payload: e.target.value,\r\n                        })\r\n                      }}\r\n                    />\r\n                    <Divider />\r\n\r\n                    <Card>\r\n                      <CardContent>\r\n                        <Typography\r\n                          sx={{ fontSize: 14 }}\r\n                          color=\"text.secondary\"\r\n                          gutterBottom\r\n                        >\r\n                          Price\r\n                        </Typography>\r\n                        <Autocomplete\r\n                          sx={{ mt: 1, mb: 1 }}\r\n                          freeSolo\r\n                          id=\"amount\"\r\n                          disableClearable\r\n                          value={val[0].items[0].price.amount}\r\n                          onChange={(e, values) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_PRICE_AMOUNT',\r\n                              payload: values,\r\n                            })\r\n                          }}\r\n                          options={['10.00']}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              required={true}\r\n                              {...params}\r\n                              label=\"amount\"\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: 'text',\r\n                              }}\r\n                              onChange={(e) => {\r\n                                val[1]({\r\n                                  type: 'CREATE_ORDERS_UPDATE_ITEMS_PRICE_AMOUNT',\r\n                                  payload: e.target.value,\r\n                                })\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <Divider />\r\n                        <Autocomplete\r\n                          sx={{ mt: 1, mb: 1 }}\r\n                          freeSolo\r\n                          id=\"currency\"\r\n                          disableClearable\r\n                          value={val[0].items[0].price.currency}\r\n                          onChange={(e, values) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_PRICE_CURRENCY',\r\n                              payload: values,\r\n                            })\r\n                          }}\r\n                          options={['EUR']}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              required={true}\r\n                              {...params}\r\n                              label=\"currency\"\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: 'text',\r\n                              }}\r\n                              onChange={(e) => {\r\n                                val[1]({\r\n                                  type: 'CREATE_ORDERS_UPDATE_ITEMS_PRICE_CURRENCY',\r\n                                  payload: e.target.value,\r\n                                })\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </CardContent>\r\n                    </Card>\r\n                    <Divider />\r\n                    <Autocomplete\r\n                      freeSolo\r\n                      id=\"name\"\r\n                      disableClearable\r\n                      value={val[0].items[0].name}\r\n                      onChange={(e, values) => {\r\n                        val[1]({\r\n                          type: 'CREATE_ORDERS_UPDATE_ITEMS_NAME',\r\n                          payload: values,\r\n                        })\r\n                      }}\r\n                      options={['T-Shirt']}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          required={true}\r\n                          {...params}\r\n                          label=\"name\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: 'text',\r\n                          }}\r\n                          onChange={(e) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_NAME',\r\n                              payload: e.target.value,\r\n                            })\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Divider />\r\n                    <Autocomplete\r\n                      freeSolo\r\n                      id=\"category\"\r\n                      disableClearable\r\n                      value={val[0].items[0].category}\r\n                      onChange={(e, values) => {\r\n                        val[1]({\r\n                          type: 'CREATE_ORDERS_UPDATE_ITEMS_CATEGORY',\r\n                          payload: values,\r\n                        })\r\n                      }}\r\n                      options={['clothes']}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          required={true}\r\n                          {...params}\r\n                          label=\"category\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: 'text',\r\n                          }}\r\n                          onChange={(e) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_CATEGORY',\r\n                              payload: e.target.value,\r\n                            })\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Divider />\r\n                    <Autocomplete\r\n                      freeSolo\r\n                      id=\"sku\"\r\n                      disableClearable\r\n                      value={val[0].items[0].sku}\r\n                      onChange={(e, values) => {\r\n                        val[1]({\r\n                          type: 'CREATE_ORDERS_UPDATE_ITEMS_SKU',\r\n                          payload: values,\r\n                        })\r\n                      }}\r\n                      options={['12341234']}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          required={true}\r\n                          {...params}\r\n                          label=\"sku\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: 'text',\r\n                          }}\r\n                          onChange={(e) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_SKU',\r\n                              payload: e.target.value,\r\n                            })\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Divider />\r\n                    <Autocomplete\r\n                      freeSolo\r\n                      id=\"brand\"\r\n                      disableClearable\r\n                      value={val[0].items[0].brand}\r\n                      onChange={(e, values) => {\r\n                        val[1]({\r\n                          type: 'CREATE_ORDERS_UPDATE_ITEMS_BRAND',\r\n                          payload: values,\r\n                        })\r\n                      }}\r\n                      options={['TopChoice']}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"brand\"\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            type: 'text',\r\n                          }}\r\n                          onChange={(e) => {\r\n                            val[1]({\r\n                              type: 'CREATE_ORDERS_UPDATE_ITEMS_BRAND',\r\n                              payload: e.target.value,\r\n                            })\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Stack>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            onClick={toShippingPage}\r\n            fullWidth\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={toMerchantPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React, { useState } from 'react'\r\nimport Item from './Item'\r\n\r\nfunction Items() {\r\n  const index = 0\r\n  return (\r\n    <div className=\"items-container\">\r\n      <Item />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Items\r\n","import axios from 'axios'\r\n\r\nexport default async function myAxios(\r\n  url = '',\r\n  data = {},\r\n  type = 'GET',\r\n  config = {}\r\n) {\r\n  if (type === 'GET') {\r\n    let dataStr = ''\r\n    Object.keys(data).forEach((key) => {\r\n      dataStr += key + '=' + data[key] + '&'\r\n    })\r\n    if (dataStr !== '') {\r\n      dataStr = dataStr.substring(0, dataStr.lastIndexOf('&'))\r\n      url += '?' + dataStr\r\n    }\r\n    return axios.get(url, config)\r\n  } else {\r\n    return axios.post(url, data)\r\n  }\r\n}\r\n","import myAxios from './myAxios'\r\n\r\nexport const reqCreateOrders = (orderForm) =>\r\n  myAxios('/createOrders', orderForm, 'POST', 'reqRegister')\r\n","import React, { useState, useContext } from 'react'\r\nimport createOrdersContext from '../../context/createOrdersContext'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormLabel,\r\n  Divider,\r\n  Button,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Stack,\r\n  Autocomplete,\r\n} from '@mui/material'\r\nimport { useHistory, Redirect } from 'react-router-dom'\r\nimport { reqCreateOrders } from '../../../api'\r\n\r\nconst gridItemText = {\r\n  mt: 1,\r\n  mb: 1,\r\n}\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  height: '95vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nconst creatOrdersFn = async (formData) => {\r\n  const response = await reqCreateOrders(formData)\r\n  const result = response.data\r\n\r\n  console.log('result in createOrder', result)\r\n  if (result.status === 200) {\r\n    console.log('checkoutUrl in createOrder', result.data.checkoutUrl)\r\n    return result.data.checkoutUrl\r\n  }\r\n  return 'Faild to create Orders'\r\n}\r\n\r\nfunction MerchantInfo({ waitRes, setWaitRes }) {\r\n  const val = useContext(createOrdersContext)\r\n  console.log('val[0]: ', val[0])\r\n  const history = useHistory()\r\n  const [errMsg, setErrMsg] = useState('')\r\n  console.log('waitRes in Merchant: ', waitRes)\r\n  const handleSubmit = async () => {\r\n    if (val[0].merchant.redirectCancelUrl === '') {\r\n      setErrMsg('RedirectCancelUrl is required!!')\r\n    } else if (val[0].merchant.redirectConfirmUrl === '') {\r\n      setErrMsg('RedirectConfirmUrl is required!!')\r\n    } else {\r\n      console.log('submit form to backend')\r\n      setWaitRes(true)\r\n      const res = await creatOrdersFn(val[0])\r\n      if (res !== 'Faild to create Orders') {\r\n        window.location.href = res\r\n      }\r\n    }\r\n  }\r\n  const toItemsPage = () => {\r\n    history.replace('/items')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"form\" sx={pageStyle}>\r\n        <div>\r\n          <form>\r\n            <FormLabel sx={formTopLabel} component=\"legend\">\r\n              Merchant\r\n            </FormLabel>\r\n            <div className=\"body-container\">\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                {errMsg ? (\r\n                  <Box\r\n                    sx={{\r\n                      color: 'red',\r\n                      marginLeft: '1em',\r\n                    }}\r\n                  >\r\n                    {errMsg}\r\n                  </Box>\r\n                ) : null}\r\n\r\n                <Stack spacing={1} sx={{ width: 300 }}>\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"redirectCancelUrl\"\r\n                    disableClearable\r\n                    value={val[0].merchant.redirectCancelUrl}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_MERCHANT_REDIRECTCANCELURL',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={[\r\n                      'https://portal.staging.scalapay.com/failure-url',\r\n                    ]}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"redirectCancelUrl\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_MERCHANT_REDIRECTCANCELURL',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"redirectConfirmUrl\"\r\n                    disableClearable\r\n                    value={val[0].merchant.redirectConfirmUrl}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_MERCHANT_REDIRECTCONFIRMURL',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={[\r\n                      'https://portal.staging.scalapay.com/success-url',\r\n                    ]}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        required={true}\r\n                        {...params}\r\n                        label=\"redirectConfirmUrl\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_MERCHANT_REDIRECTCONFIRMURL',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    id=\"merchantReference\"\r\n                    disableClearable\r\n                    value={val[0].merchantReference}\r\n                    onChange={(e, values) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_MERCHANTREFERENCE',\r\n                        payload: values,\r\n                      })\r\n                    }}\r\n                    options={['merchantOrder-1234']}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"merchantReference\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          type: 'text',\r\n                        }}\r\n                        onChange={(e) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_MERCHANTREFERENCE',\r\n                            payload: e.target.value,\r\n                          })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Divider />\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography\r\n                        sx={{ fontSize: 14 }}\r\n                        color=\"text.secondary\"\r\n                        gutterBottom\r\n                      >\r\n                        shippingAmount\r\n                      </Typography>\r\n                      <Autocomplete\r\n                        freeSolo\r\n                        id=\"amount\"\r\n                        disableClearable\r\n                        value={val[0].shippingAmount.amount}\r\n                        onChange={(e, values) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPINGAMOUNT_AMOUNT',\r\n                            payload: values,\r\n                          })\r\n                        }}\r\n                        options={['10.00']}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"amount\"\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: 'text',\r\n                            }}\r\n                            onChange={(e) => {\r\n                              val[1]({\r\n                                type: 'CREATE_ORDERS_UPDATE_SHIPPINGAMOUNT_AMOUNT',\r\n                                payload: e.target.value,\r\n                              })\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Divider />\r\n                      <Autocomplete\r\n                        freeSolo\r\n                        id=\"currency\"\r\n                        disableClearable\r\n                        value={val[0].shippingAmount.currency}\r\n                        onChange={(e, values) => {\r\n                          val[1]({\r\n                            type: 'CREATE_ORDERS_UPDATE_SHIPPINGAMOUNT_CURRENCY',\r\n                            payload: values,\r\n                          })\r\n                        }}\r\n                        options={['EUR']}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"currency\"\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: 'text',\r\n                            }}\r\n                            onChange={(e) => {\r\n                              val[1]({\r\n                                type: 'CREATE_ORDERS_UPDATE_SHIPPINGAMOUNT_CURRENCY',\r\n                                payload: e.target.value,\r\n                              })\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Divider />\r\n\r\n                  <TextField\r\n                    id=\"orderExpiryMilliseconds\"\r\n                    label=\"orderExpiryMilliseconds\"\r\n                    type=\"text\"\r\n                    placeholder=\"orderExpiryMilliseconds...\"\r\n                    value={val[0].orderExpiryMilliseconds}\r\n                    onChange={(e) => {\r\n                      val[1]({\r\n                        type: 'CREATE_ORDERS_UPDATE_ORDEREXPIRYMILLISECONDS',\r\n                        payload: e.target.value,\r\n                      })\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            onClick={toItemsPage}\r\n            fullWidth\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MerchantInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport TotalAmount from './subForms/TotalAmount'\r\nimport Consumer from './subForms/Consumer'\r\nimport Billing from './subForms/Billing'\r\nimport Shipping from './subForms/Shipping'\r\nimport Items from './subForms/Items'\r\nimport Merchant from './subForms/Merchant'\r\n\r\nimport { Box, CircularProgress, Typography } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\nimport LinearProgress, {\r\n  linearProgressClasses,\r\n} from '@mui/material/LinearProgress'\r\n\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router'\r\n\r\nconst pageStyle = {\r\n  width: {\r\n    xs: '100%',\r\n    sm: '380px',\r\n    xl: '380px',\r\n  },\r\n  border: {\r\n    xs: '1px yellow solid',\r\n    sm: '1px red solid',\r\n    xl: '1px green solid',\r\n  },\r\n  height: '100vh',\r\n  margin: '0 auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'space-between',\r\n  flexGrow: 1,\r\n  flexShrink: 1,\r\n}\r\n\r\nconst formTopLabel = {\r\n  width: '100%',\r\n  height: '50px',\r\n  textAlign: 'center',\r\n  lineHeight: '50px',\r\n}\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n  },\r\n}))\r\n\r\nfunction Form() {\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  console.log('location in Form: ', location)\r\n  console.log('history in Form: ', history)\r\n\r\n  const [waitRes, setWaitRes] = useState(false)\r\n\r\n  const FormTitle = [\r\n    '/totalAmount',\r\n    '/consumer',\r\n    '/billing',\r\n    '/shipping',\r\n    '/items',\r\n    '/merchant',\r\n  ]\r\n  const [progressWidth, setProgressWidth] = useState(0)\r\n  let path = location.pathname\r\n  useEffect(() => {\r\n    console.log('path in Form page: ', path)\r\n\r\n    if (path === '/') {\r\n      history.replace('/totalAmount')\r\n    }\r\n\r\n    let page = FormTitle.findIndex((item) => item === path)\r\n    if (page !== -1) {\r\n      setProgressWidth((page + 1) * (100 / 6))\r\n    }\r\n  }, [path])\r\n\r\n  return (\r\n    <>\r\n      {waitRes ? (\r\n        <Box\r\n          sx={{\r\n            height: '100vh',\r\n            margin: '0 auto',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{ fontSize: 25, mb: 2 }}\r\n            color=\"text.secondary\"\r\n            gutterBottom\r\n          >\r\n            Orders creating\r\n          </Typography>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <Box className=\"form\" sx={pageStyle}>\r\n          <div>\r\n            <Box\r\n              color=\"secondary\"\r\n              sx={{\r\n                width: '92%',\r\n                height: '15px',\r\n                left: 2,\r\n                mt: 2,\r\n                ml: 2,\r\n              }}\r\n            >\r\n              <BorderLinearProgress\r\n                data-testid=\"linearProgress\"\r\n                variant=\"determinate\"\r\n                value={progressWidth}\r\n              />\r\n            </Box>\r\n          </div>\r\n          <div>\r\n            <Route path=\"/totalAmount\">\r\n              <TotalAmount />\r\n            </Route>\r\n            <Route path=\"/consumer\">\r\n              <Consumer />\r\n            </Route>\r\n            <Route path=\"/billing\">\r\n              <Billing />\r\n            </Route>\r\n            <Route path=\"/shipping\">\r\n              <Shipping />\r\n            </Route>\r\n            <Route path=\"/items\">\r\n              <Items />\r\n            </Route>\r\n            <Route path=\"/merchant\">\r\n              <Merchant waitRes={waitRes} setWaitRes={setWaitRes} />\r\n            </Route>\r\n          </div>\r\n        </Box>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { FC, useReducer } from 'react'\r\nimport createOrdersReducer from './createOrdersReducer'\r\nimport createOrdersContext from '../context/createOrdersContext'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport Form from './Form'\r\n\r\nconst userReducer = {\r\n  totalAmount: {\r\n    amount: '',\r\n    currency: '',\r\n  },\r\n  consumer: {\r\n    givenNames: '',\r\n    phoneNumber: '',\r\n    surname: '',\r\n    email: '',\r\n  },\r\n  billing: {\r\n    phoneNumber: '',\r\n    countryCode: '',\r\n    name: '',\r\n    postcode: '',\r\n    suburb: '',\r\n    line1: '',\r\n  },\r\n  shipping: {\r\n    phoneNumber: '',\r\n    countryCode: '',\r\n    name: '',\r\n    postcode: '',\r\n    suburb: '',\r\n    line1: '',\r\n  },\r\n  items: [\r\n    {\r\n      price: {\r\n        amount: '',\r\n        currency: '',\r\n      },\r\n      quantity: 1,\r\n      gtin: '',\r\n      name: '',\r\n      category: '',\r\n      sku: '',\r\n      brand: '',\r\n    },\r\n  ],\r\n  merchant: {\r\n    redirectCancelUrl: '',\r\n    redirectConfirmUrl: '',\r\n  },\r\n  shippingAmount: {\r\n    amount: '',\r\n    currency: '',\r\n  },\r\n  orderExpiryMilliseconds: 600000,\r\n  merchantReference: '',\r\n}\r\n\r\nconst { Provider } = createOrdersContext\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(createOrdersReducer, userReducer)\r\n  const store = React.useMemo(() => [state, dispatch], [state])\r\n  console.log('store in createOrders context value: ', store)\r\n  return <Provider value={store}> {children} </Provider>\r\n}\r\n\r\nconst index = () => {\r\n  return (\r\n    <div className=\"create-orders\">\r\n      <StoreProvider>\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route>\r\n              <Form />\r\n            </Route>\r\n          </Switch>\r\n        </HashRouter>\r\n      </StoreProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default index\r\n","import React from 'react'\r\n// import './App.css'\r\nimport CreateOrders from './components/createOrders'\r\n\r\nimport {\r\n  ThemeProvider,\r\n  Theme,\r\n  StyledEngineProvider,\r\n  createTheme,\r\n} from '@mui/material/styles'\r\n\r\n// declare module '@mui/styles/defaultTheme' {\r\n//   // eslint-disable-next-line @typescript-eslint/no-empty-interface\r\n//   interface DefaultTheme extends Theme { }\r\n// }\r\n\r\nconst theme = createTheme()\r\n\r\nfunction App() {\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <ThemeProvider theme={theme}>\r\n        <CreateOrders />\r\n      </ThemeProvider>\r\n    </StyledEngineProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}